package view

import (
	"queue-bite/pkg/components/ui"
	"queue-bite/pkg/components/ui/form"
	fm "queue-bite/pkg/form"
	"queue-bite/pkg/utils"
)

type JoinFormData struct {
	PartyName    *fm.FormItemContext
	PartySize    *fm.FormItemContext
	ErrorMessage string
}

func NewJoinFormData() *JoinFormData {
	return &JoinFormData{
		PartyName: &fm.FormItemContext{
			ID:   utils.GenerateID(),
			Name: "PartyName",
		},
		PartySize: &fm.FormItemContext{
			ID:   utils.GenerateID(),
			Name: "PartySize",
		},
	}
}

templ JoinForm(props *JoinFormData) {
	<form hx-post="/waitlist/join" hx-target="this" hx-swap="outerHTML" class="space-y-8">
		@form.FormItem(form.NewFormItemProps().WithFormItem(props.PartyName)) {
			<label
				{ ui.NewLabel(ui.LabelProps().
                        WithinContext(ctx, props.PartyName.ID).
                        WithRequired(true))... }
			>
				Name
			</label>
			<input
				placeholder="Enter your name"
				required
				{ ui.NewInput(ui.InputProps().
                        WithinContext(ctx, props.PartyName.ID))... }
			/>
		}
		<input name="PartySize" type="number" value="2"/>
		<button
			{ ui.NewButton(ui.ButtonProps().
                    WithClass("w-full").
                    WithSize(ui.Button.Sizes.Large))... }
		>
			Join Waitlist
		</button>
	</form>
	if props.ErrorMessage != "" {
		<div class="bg-destructive">{ props.ErrorMessage }</div>
	}
}
