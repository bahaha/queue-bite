package view

import (
	"fmt"
	"queue-bite/internal/features/waitlist/domain"
	"queue-bite/pkg/components/svg"
	"queue-bite/pkg/components/ui"
	"strconv"
	"time"
)

type QueuedPartyProps struct {
	*domain.QueuedParty
	RemainingWaitTime time.Duration
	ReadyForSeating   bool
}

templ QueuedParty(props *QueuedPartyProps) {
	<div class="space-y-6">
		<div class="space-y-2">
			<h1 class="text-3xl font-semibold">Hello, { props.Name }</h1>
			<div class="flex items-center gap-2 text-muted-foreground">
				@svg.UserRound("w-4 h-4")
				<span class="text-lg">Party of {  strconv.Itoa(props.Size) }</span>
			</div>
		</div>
	</div>
	@QueueStatusView(props)
	<div class="text-center text-muted-foreground">
		<p>Queue ID: { string(props.ID) }</p>
	</div>
}

templ QueueStatusView(props *QueuedPartyProps) {
	<div
		class="border border-secondary rounded-xl px-6"
		hx-ext="sse"
		hx-target="this"
		hx-swap="outerHTML"
		sse-connect={ fmt.Sprintf("/sse/waitlist/%s", props.ID) }
		sse-swap="notify:party:ready,notify:party:queue_update"
	>
		if props.ReadyForSeating {
			<div class="pt-8 space-y-6">
				<div class="flex items-center justify-center">
					<div class="flex flex-col items-center">
						<div class="w-20 h-20 rounded-full flex items-center justify-center bg-primary">
							@svg.Utensils("w-10 h-10 text-secondary")
						</div>
					</div>
				</div>
				<div class="space-y-2 text-center">
					<h2 class="text-2xl font-medium">Your table is ready!</h2>
					<p class="text-lg text-muted-foreground">
						Please check in with the host
					</p>
				</div>
			</div>
		} else {
			<div class="py-8">
				<div class="relative flex items-center gap-4">
					<div class="absolute top-7 left-2 right-2 h-1 bg-secondary">
						<div class="bg-primary h-full w-0"></div>
					</div>
					<div class="flex flex-col items-center z-10 min-w-[64px]">
						<div class="w-14 h-14 rounded-full flex items-center justify-center bg-gray-100">
							@svg.Utensils("w-7 h-7 text-primary")
						</div>
						<span class="text-sm mt-1 text-muted-foreground">Restaurant</span>
					</div>
					<div class="flex flex-col items-center z-10 ml-auto">
						<div class="w-14 h-14 rounded-full flex items-center justify-center shadow-sm bg-primary">
							<span class="text-white font-medium">YOU</span>
						</div>
						<span class="text-sm mt-1 text-muted-foreground">Your spot</span>
					</div>
				</div>
			</div>
			<div class="text-center space-y-2">
				<h2 class="text-2xl font-medium">
					if props.Position == 0 {
						You're the next!
					} else if props.Position == 1 {
						1 party ahead of you
					} else {
						{ strconv.Itoa(props.Position) } parties ahead of you
					}
				</h2>
				if props.Position != 0 {
					<p class="text-lg text-muted-foreground">
						Estimated wait time: ~{ props.RemainingWaitTime.String() }
					</p>
				}
			</div>
		}
		<div class="text-center my-6">
			if props.ReadyForSeating {
				<button
					hx-post="/waitlist/check-in"
					hx-target="main"
					hx-swap="innerHTML"
					{ ui.NewButton(ui.ButtonProps().
                    WithSize(ui.Button.Sizes.Large).
                    WithClass("w-full"))... }
				>
					<span>Check in</span>
					@svg.ChevronRight("w-4 h-4")
				</button>
			} else {
				<p class="text-lg px-6 py-3 rounded-xl inline-block bg-secondary text-secondary-foreground">
					We'll notify you when your table is ready
				</p>
			}
		</div>
	</div>
}
